(function(){(this||window).webpackJsonp.registerAbsMids({"esri/geometry/support/normalizeUtils":1635,"esri/tasks/geometry/cut":1636,"esri/tasks/geometry/simplify":1637,"esri/views/2d/layers/KMLLayerView2D":2568})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{1635:function(e,t,i){var n,r;n=[i.dj.c(e.i),t,i(10),i(11),i(98),i(14),i(6),i(9),i(7),i(91),i(104),i(40),i(90),i(63),i(1636),i(1637)],void 0===(r=function(e,t,i,n,r,s,o,a,l,p,u,h,c,f,y,g){function d(e){return"polygon"===e.type}function v(e){return"polygon"===e[0].type}function m(e){return"polyline"===e[0].type}function w(e){return d(e)?e.rings:e.paths}function _(e,t){return Math.ceil((e-t)/(2*t))}function b(e,t){for(var i=0,n=w(e);i<n.length;i++)for(var r=0,s=n[i];r<s.length;r++){s[r][0]+=t}return e}function V(e){for(var t=[],i=0,n=0,r=0;r<e.length;r++){for(var s=e[r],o=null,a=0;a<s.length;a++)o=s[a],t.push(o),0===a?n=i=o[0]:(i=Math.min(i,o[0]),n=Math.max(n,o[0]));o&&t.push([(i+n)/2,0])}return t}function x(e,t){if(!(e instanceof u||e instanceof p)){var i="straightLineDensify: the input geometry is neither polyline nor polygon";throw S.error(i),new s(i)}for(var n=[],r=0,o=w(e);r<o.length;r++){var a=o[r],l=[];n.push(l),l.push([a[0][0],a[0][1]]);for(var h=0;h<a.length-1;h++){var c=a[h][0],f=a[h][1],y=a[h+1][0],g=a[h+1][1],v=Math.sqrt((y-c)*(y-c)+(g-f)*(g-f)),m=(g-f)/v,_=(y-c)/v,b=v/t;if(b>1){for(var V=1;V<=b-1;V++){var x=V*t,M=_*x+c,C=m*x+f;l.push([M,C])}var I=(v+Math.floor(b-1)*t)/2,P=_*I+c,L=m*I+f;l.push([P,L])}l.push([y,g])}}return d(e)?new p({rings:n,spatialReference:e.spatialReference}):new u({paths:n,spatialReference:e.spatialReference})}function M(e,t,i){if(t){var n=x(e,1e6);e=f.webMercatorToGeographic(n,!0)}return i&&(e=b(e,i)),e}function C(e,t,i){var n;if(Array.isArray(e)){if((n=e[0])>t){var r=_(n,t);e[0]=n+r*(-2*t)}else if(n<i){r=_(n,i);e[0]=n+r*(-2*i)}}else if((n=e.x)>t){r=_(n,t);e=e.clone().offset(r*(-2*t),0)}else if(n<i){r=_(n,i);e=e.clone().offset(r*(-2*i),0)}return e}function I(e,t){for(var i=-1,n=0;n<t.cutIndexes.length;n++)!function(n){for(var r=t.cutIndexes[n],s=t.geometries[n],o=w(s),a=0;a<o.length;a++)!function(e){var t=o[e];t.some(function(i){if(i[0]<180)return!0;for(var n=0,r=0;r<t.length;r++){var o=t[r][0];n=o>n?o:n}for(var a=-360*_(n=Number(n.toFixed(9)),180),l=0;l<t.length;l++){var p=s.getPoint(e,l);s.setPoint(e,l,p.clone().offset(a,0))}return!0})}(a);if(r===i){if(v(e))for(var l=0,p=w(s);l<p.length;l++){var u=p[l];e[r]=e[r].addRing(u)}else if(m(e))for(var h=0,c=w(s);h<c.length;h++){var f=c[h];e[r]=e[r].addPath(f)}}else i=r,e[r]=s}(n);return e}Object.defineProperty(t,"__esModule",{value:!0});var S=o.getLogger("esri.geometry.support.normalizeUtils"),P={102100:{maxX:20037508.342788905,minX:-20037508.342788905,plus180Line:new u({paths:[[[20037508.342788905,-20037508.342788905],[20037508.342788905,20037508.342788905]]],spatialReference:h.WebMercator}),minus180Line:new u({paths:[[[-20037508.342788905,-20037508.342788905],[-20037508.342788905,20037508.342788905]]],spatialReference:h.WebMercator})},4326:{maxX:180,minX:-180,plus180Line:new u({paths:[[[180,-180],[180,180]]],spatialReference:h.WGS84}),minus180Line:new u({paths:[[[-180,-180],[-180,180]]],spatialReference:h.WGS84})}};t.straightLineDensify=x,t.normalizeCentralMeridian=function e(t,s,o){return n(this,void 0,void 0,function(){var n,h,d,v,m,w,V,x,S,L,R,T,O,J,j,A,k,N,G,W,q,U,X,z,D,E,K,F,B,H,Q,Y,Z,$,ee,te,ie;return i(this,function(i){switch(i.label){case 0:if(!Array.isArray(t))return[2,e([t],s)];for(n=s?s.url:r.geometryServiceUrl,L=0,R=[],T=[],O=0,J=t;O<J.length;O++)j=J[O],a.isNone(j)?T.push(j):(h||(h=j.spatialReference,d=c.getInfo(h),v=h.isWebMercator,m=P[V=v?102100:4326].maxX,w=P[V].minX,x=P[V].plus180Line,S=P[V].minus180Line),d?"mesh"===j.type?T.push(j):"point"===j.type?T.push(C(j.clone(),m,w)):"multipoint"===j.type?((A=j.clone()).points=A.points.map(function(e){return C(e,m,w)}),T.push(A)):"extent"===j.type?(N=j.clone(),k=N._normalize(!1,!1,d),T.push(k.rings?new p(k):k)):j.extent?(N=j.extent,G=_(N.xmin,w),q=0==(W=G*(2*m))?j.clone():b(j.clone(),W),N.offset(W,0),N.intersects(x)&&N.xmax!==m?(L=N.xmax>L?N.xmax:L,q=M(q,v),R.push(q),T.push("cut")):N.intersects(S)&&N.xmin!==w?(L=N.xmax*(2*m)>L?N.xmax*(2*m):L,q=M(q,v,360),R.push(q),T.push("cut")):T.push(q)):T.push(j.clone()):T.push(j));for(U=_(L,m),X=-90,z=U,D=new u;U>0;)E=360*U-180,D.addPath([[E,X],[E,-1*X]]),X*=-1,U--;return R.length>0&&z>0?[4,y.cut(n,R,D,o)]:[3,3];case 1:for(K=i.sent(),F=I(R,K),B=[],H=[],ee=0;ee<T.length;ee++)"cut"!==(te=T[ee])?H.push(te):(ie=F.shift(),Q=t[ee],a.isSome(Q)&&"polygon"===Q.type&&Q.rings&&Q.rings.length>1&&ie.rings.length>=Q.rings.length?(B.push(ie),H.push("simplify")):H.push(v?f.geographicToWebMercator(ie):ie));return B.length?[4,g.simplify(n,B,o)]:[2,H];case 2:for(Y=i.sent(),Z=[],ee=0;ee<H.length;ee++)"simplify"!==(te=H[ee])?Z.push(te):Z.push(v?f.geographicToWebMercator(Y.shift()):Y.shift());return[2,Z];case 3:for($=[],ee=0;ee<T.length;ee++)"cut"!==(te=T[ee])?$.push(te):(ie=R.shift(),$.push(!0===v?f.geographicToWebMercator(ie):ie));return[2,l.resolve($)]}})})},t.getDenormalizedExtent=function(e){var t;if(!e)return null;var i=e.extent;if(!i)return null;var n=e.spatialReference&&c.getInfo(e.spatialReference);if(!n)return i;var r,s=n.valid,o=s[0],a=s[1],l=2*a,p=i.width,u=i.xmin,h=i.xmax;if(u=(t=[h,u])[0],h=t[1],"extent"===e.type||0===p||p<=a||p>l||u<o||h>a)return i;switch(e.type){case"polygon":if(!(e.rings.length>1))return i;r=V(e.rings);break;case"polyline":if(!(e.paths.length>1))return i;r=V(e.paths);break;case"multipoint":r=e.points}for(var f=i.clone(),y=0;y<r.length;y++){var g=r[y][0];g<0?(g+=a,h=Math.max(g,h)):(g-=a,u=Math.min(g,u))}return f.xmin=u,f.xmax=h,f.width<p?(f.xmin-=a,f.xmax-=a,f):i},t.normalizeMapX=function(e,t){var i=c.getInfo(t);if(i){var n=i.valid,r=n[0],s=n[1],o=s-r;if(e<r)for(;e<r;)e+=o;if(e>s)for(;e>s;)e-=o}return e}}.apply(null,n))||(e.exports=r)},1636:function(e,t,i){var n,r;n=[i.dj.c(e.i),t,i(4),i(11),i(10),i(36),i(44),i(31),i(57)],void 0===(r=function(e,t,i,n,r,s,o,a,l){Object.defineProperty(t,"__esModule",{value:!0}),t.cut=function(e,t,p,u){return n(this,void 0,void 0,function(){var n,h,c,f,y,g,d;return r(this,function(r){switch(r.label){case 0:return n="string"==typeof e?a.urlToObject(e):e,h=t[0].spatialReference,c=i({},u,{query:i({},n.query,{f:"json",sr:JSON.stringify(h),target:JSON.stringify({geometryType:l.getJsonType(t[0]),geometries:t}),cutter:JSON.stringify(p)})}),[4,o(n.path+"/cut",c)];case 1:return f=r.sent(),y=f.data,g=y.cutIndexes,d=y.geometries,[2,{cutIndexes:g,geometries:(void 0===d?[]:d).map(function(e){return s.fromJSON(e).set(h)})}]}})})}}.apply(null,n))||(e.exports=r)},1637:function(e,t,i){var n,r;n=[i.dj.c(e.i),t,i(4),i(11),i(10),i(44),i(31),i(57)],void 0===(r=function(e,t,i,n,r,s,o,a){Object.defineProperty(t,"__esModule",{value:!0}),t.simplify=function(e,t,l){return n(this,void 0,void 0,function(){var n,p,u,h;return r(this,function(r){switch(r.label){case 0:return n="string"==typeof e?o.urlToObject(e):e,p=t[0].spatialReference,u=a.getJsonType(t[0]),h=i({},l,{query:i({},n.query,{f:"json",sr:p.wkid?p.wkid:JSON.stringify(p),geometries:JSON.stringify(function(e){return{geometryType:a.getJsonType(e[0]),geometries:e.map(function(e){return e.toJSON()})}}(t))})}),[4,s(n.path+"/simplify",h)];case 1:return[2,function(e,t,i){var n=a.getGeometryType(t);return e.map(function(e){var t=n.fromJSON(e);return t.spatialReference=i,t})}(r.sent().data,u,p)]}})})}}.apply(null,n))||(e.exports=r)},2568:function(e,t,i){var n,r;n=[i.dj.c(e.i),t,i(2),i(1),i(10),i(11),i(97),i(44),i(58),i(29),i(22),i(7),i(52),i(25),i(0),i(37),i(63),i(1823),i(184),i(1647),i(1765),i(1633)],void 0===(r=function(e,t,i,n,r,s,o,a,l,p,u,h,c,f,y,g,d,v,m,w,_,b){var V=p.ofType(o);return function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._handles=new u,t._bitmapIndex=new Map,t._mapImageContainer=new m.BitmapContainer(t.clips),t._featuresMap=new Map,t.allVisiblePoints=new V,t.allVisiblePolylines=new V,t.allVisiblePolygons=new V,t.allVisibleMapImages=new p,t.container=new m.Container,t}return i(t,e),t.prototype.hitTest=function(e,t){var i=this;if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return h.resolve(null);var n=[this._pointsView.hitTest(e,t),this._polylinesView.hitTest(e,t),this._polygonsView.hitTest(e,t)];return h.all(n).then(function(e){return e.filter(function(e){return e&&(e.layer=i.layer,e.sourceLayer=i.layer),!!e})[0]||null})},t.prototype.update=function(e){this._polygonsView&&this._polygonsView.update(e),this._polylinesView&&this._polylinesView.update(e),this._pointsView&&this._pointsView.update(e)},t.prototype.attach=function(){var e=this;this._handles.add([this.allVisibleMapImages.on("change",function(t){t.added.forEach(function(t){return e._addMapImage(t)}),t.removed.forEach(function(t){return e._removeMapImage(t)})}),this.clips.on("change",function(){e._polygonsView.container.setClips(e.clips),e._polylinesView.container.setClips(e.clips),e._pointsView.container.setClips(e.clips),e._mapImageContainer.setClips(e.clips)})]),this.container.addChild(this._mapImageContainer),this._polygonsView=new _.default({view:this.view,graphics:this.allVisiblePolygons}),this.container.addChild(this._polygonsView.container),this._polylinesView=new _.default({view:this.view,graphics:this.allVisiblePolylines}),this.container.addChild(this._polylinesView.container),this._pointsView=new _.default({view:this.view,graphics:this.allVisiblePoints}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",function(){return e._refreshCollections()}),this._fetchingPromise=this._fetchService().then(function(){e._fetchingPromise=null,e.notifyChange("updating")}),this._polygonsView.container.setClips(this.clips),this._polylinesView.container.setClips(this.clips),this._pointsView.container.setClips(this.clips),this._mapImageContainer.setClips(this.clips)},t.prototype.detach=function(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)},t.prototype.moveStart=function(){this.requestUpdate()},t.prototype.viewChange=function(){this.requestUpdate()},t.prototype.moveEnd=function(){this.requestUpdate()},t.prototype.isUpdating=function(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating},t.prototype._addMapImage=function(e){var t=this;this.view.spatialReference.isWGS84&&a(e.href,{responseType:"image"}).then(function(i){var n=i.data,r=g.fromJSON(e.extent);d.canProject(r,t.view.spatialReference)&&(r=d.project(r,t.view.spatialReference));var s=new m.Bitmap(n);s.x=r.xmin,s.y=r.ymax,s.resolution=r.width/n.naturalWidth,s.rotation=e.rotation,t._mapImageContainer.addChild(s),t._bitmapIndex.set(e,s)})},t.prototype._fetchService=function(){var e=this;return this._handles.remove("refresh-collections"),this._getParsedKML().then(function(t){return e._fetchSublayerService(e.layer,t)})},t.prototype._fetchSublayerService=function(e,t){var i=this,n=e.sublayers;if(!n||0===n.length)return h.resolve();var r=[];return n.forEach(function(e){var n=f.whenTrueOnce(e,"visible").then(function(){return e.load()}).then(function(){return l.safeCast(i._getGraphicsForSublayer(e,t))}).then(function(t){return h.create(function(n){e.networkLink?n():(i._featuresMap.set(e,t),i._handles.add(c.schedule(function(){i._refreshCollections(),n()}),"refresh-collections"))})}).then(function(){return i._fetchSublayerService(e,t)});e.visible&&r.push(n)}),h.all(r).then(function(){})},t.prototype._getParsedKML=function(){return v.fetchService(this.layer.url,this.view.spatialReference,this.layer.refreshInterval).then(function(e){return v.parseKML(e.data)})},t.prototype._getGraphicsForSublayer=function(e,t){return s(this,void 0,void 0,function(){var i,n,s,o,a;return r(this,function(r){switch(r.label){case 0:return i=null,t.sublayers.some(function(t){return i=t,t.id===e.id})?(n={},(s=i.points)?[4,v.getGraphics(i.points)]:[3,2]):[2,null];case 1:s=r.sent(),r.label=2;case 2:return n.points=s,(o=i.polylines)?[4,v.getGraphics(i.polylines)]:[3,4];case 3:o=r.sent(),r.label=4;case 4:return n.polylines=o,(a=i.polygons)?[4,v.getGraphics(i.polygons)]:[3,6];case 5:a=r.sent(),r.label=6;case 6:return[2,(n.polygons=a,n.mapImages=i.mapImages,n)]}})})},t.prototype._refreshCollections=function(){var e=this,t=this.get("layer.visibleSublayers");this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),t&&t.length&&t.forEach(function(t){var i=e._featuresMap.get(t);i&&(e.allVisiblePoints.addMany(i.points),e.allVisiblePolylines.addMany(i.polylines),e.allVisiblePolygons.addMany(i.polygons),e.allVisibleMapImages.addMany(i.mapImages))})},t.prototype._removeMapImage=function(e){var t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))},n([y.property()],t.prototype,"_pointsView",void 0),n([y.property()],t.prototype,"_polylinesView",void 0),n([y.property()],t.prototype,"_polygonsView",void 0),n([y.property()],t.prototype,"_fetchingPromise",void 0),n([y.property({dependsOn:["_fetchingPromise","_pointsView.updating","_polygonsView.updating","_polylinesView.updating"]})],t.prototype,"updating",void 0),n([y.subclass("esri.views.2d.layers.KMLLayerView2D")],t)}(y.declared(w.LayerView2D(b)))}.apply(null,n))||(e.exports=r)}}]);